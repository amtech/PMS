<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
		  http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
           version="3.0">

    <!--web.xml部署描述符文件详解-->
    <!--应用名称-->
    <display-name>ssm</display-name>
    <!--应用说明-->
    <description>This is a spirng, for springMVC, mybatis integration case.</description>
    <!--应用范围内的初始化参数-->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:config/log4j.properties</param-value>
    </context-param>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>

    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>creditMgr.root</param-value>
    </context-param>

    <!--
        filter元素用来设定web应用的过滤器;
        filter-mapping 元素的两个主要子元素filter-name和url-pattern.用来定义Filter所对应的URL.
     -->
    <!--配置解决 post 请求中文乱码-->
    <filter>
        <filter-name>EncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>EncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--listener元素用来定义Listener接口-->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <!--
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    -->
    <listener>
        <listener-class>com.cjhb.ssm.credit.comm.util.listener.SpringContextLoaderListener</listener-class>
    </listener>

    <!--
        如果某个会话在一定时间内未被访问，服务器可以抛弃它，节省内存。
        可通过HttpSession 的setMaxInactiveInterval方法明确设置
        打个对象会话的超时值。或者使用session-config设置缺省时间值。
    -->
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>

    <!--<error-page>
        <error-code>500</error-code>
        <location>/common/error.html</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/common/pageNotFind</location>
    </error-page>
    <error-page>
        <error-code>400</error-code>
        <location>/common/404.html</location>
    </error-page>
    <error-page>
        <error-code>403</error-code>
        <location>/common/404.html</location>
    </error-page>
    <error-page>
        <exception-type>javax.servlet.ServletException</exception-type>
        <location>/common/error.html</location>
    </error-page>-->

</web-app>
