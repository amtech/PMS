<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.credit.dao.system.AuUserMapper">
  <resultMap id="BaseResultMap" type="com.credit.entity.system.AuUser">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="passwd" jdbcType="VARCHAR" property="passwd" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="IS_VALID" jdbcType="VARCHAR" property="isValid" />
    <result column="IS_DEL" jdbcType="VARCHAR" property="isDel" />
    <result column="CREATE_USER_ID" jdbcType="VARCHAR" property="createUserId" />
    <result column="CREATE_USER_NAME" jdbcType="VARCHAR" property="createUserName" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="LAST_UPDATE_USER_ID" jdbcType="VARCHAR" property="lastUpdateUserId" />
    <result column="LAST_UPDATE_USER_NAME" jdbcType="VARCHAR" property="lastUpdateUserName" />
    <result column="LAST_UPDATE_DATE" jdbcType="TIMESTAMP" property="lastUpdateDate" />
  </resultMap>
  
  <resultMap id="MenuResultMap" type="com.credit.entity.system.AuMenu">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="menu_name" jdbcType="VARCHAR" property="menuName" />
    <result column="menu_code" jdbcType="VARCHAR" property="menuCode" />
    <result column="menu_level" jdbcType="VARCHAR" property="menuLevel" />
    <result column="has_child" jdbcType="VARCHAR" property="hasChild" />
    <result column="icon_code" jdbcType="VARCHAR" property="iconCode" />
    <result column="menu_path" jdbcType="VARCHAR" property="menuPath" />
    <result column="super_id" jdbcType="VARCHAR" property="superId" />
    <result column="menu_order" jdbcType="DECIMAL" property="menuOrder" />
  </resultMap>
  
  <resultMap id="RoleCodeMap" type="map">
    <id column="role_code" jdbcType="VARCHAR" property="roleCode" />
  </resultMap>
  
  <sql id="Base_Column_List">
    ID, username, passwd, realname, email, login_ip, login_time, IS_VALID, IS_DEL, CREATE_USER_ID, 
    CREATE_USER_NAME, CREATE_DATE, LAST_UPDATE_USER_ID, LAST_UPDATE_USER_NAME, LAST_UPDATE_DATE
  </sql>
  
  <select id="get" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from au_user
    where ID = #{id}
  </select>
  
  <select id="ifExists" parameterType="map" resultType="user">
	SELECT * FROM AU_USER t
		WHERE t.USERNAME = #{username,jdbcType=VARCHAR}
		<if test = "isValid != null and isValid !=''">
		AND T.IS_VALID = '1'
		</if>
  </select>
  
  <select id="getAllRole"  parameterType="java.lang.String" resultMap="RoleCodeMap">
	SELECT
		role.role_code
	FROM
		au_user_role_rel rel
	LEFT JOIN au_role role ON rel.ROLE_ID = role.ID
	WHERE
		role.is_del = '0'
	AND
		role.is_valid = '1' 
	AND
		rel.USER_ID = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="findUserList" parameterType="map" resultMap="BaseResultMap">
	<![CDATA[
	SELECT * FROM AU_USER t
	WHERE
		t.USERNAME = ${userName}
	ORDER BY 
		t.IS_VALID DESC
	]]>
  </select>

  <select id="login" parameterType="map" resultType="user">
	<![CDATA[
	SELECT * FROM AU_USER t
	WHERE
		t.USERNAME = #{userName}
		AND t.PWD = #{pwd}
		AND t.STATUS = #{status}
	]]>
  </select>
 <select id="getUserList" parameterType="map" resultMap="BaseResultMap">
		SELECT * FROM AU_USER 
		WHERE IS_DEL = '0'
		<if test = "username != null and username !=''">
		AND (
			USERNAME LIKE CONCAT('%',#{username},'%') 
			or REALNAME LIKE CONCAT('%',#{username},'%')
			)
		</if>
		<if test = "email != null and email !=''">
			AND EMAIL LIKE CONCAT('%',#{email},'%')
		</if>
		<if test = "isValid != null and isValid !=''">
			AND IS_VALID = #{isValid}
		</if>
		ORDER BY 
			IS_VALID DESC
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from au_user
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="getAllUserMenuByid" parameterType="java.lang.String" resultMap="MenuResultMap">
	  	SELECT
			*
		FROM
			(
				SELECT
					menu.*
				FROM
					au_user_role_rel ur_rel
				LEFT JOIN au_role_menu_rel rm_rel ON rm_rel.ROLE_ID = ur_rel.ROLE_ID
				LEFT JOIN au_menu menu ON menu.id = rm_rel.MENU_ID
				LEFT JOIN au_role role ON role.id = ur_rel.role_id
				WHERE
					role.IS_DEL = '0'
				AND role.IS_VALID = '1'
				AND menu.IS_VALID = '1'
				AND menu.IS_DEL = '0'
				AND menu.IS_VALID = '1'
				AND ur_rel.USER_ID = #{userId,jdbcType=VARCHAR}
				UNION
					SELECT
						menu.*
					FROM
						au_user_menu_rel um
					LEFT JOIN au_menu menu ON menu.id = um.MENU_ID
					WHERE
						um.USER_ID = #{userId,jdbcType=VARCHAR}
					AND menu.IS_VALID = '1'
					AND menu.IS_DEL = '0'
			) T
		ORDER BY
			T.has_child DESC,
			T.menu_level,
			T.menu_order
  </select>
  
  <select id="getAllUserMenusByUserId" parameterType="java.lang.String" resultType="com.credit.entity.system.AuMenu">
    SELECT
		menu.*
	FROM
		au_user_menu_rel rel
	LEFT JOIN au_menu menu on rel.MENU_ID = menu.ID
	where rel.USER_ID = #{userId,jdbcType=VARCHAR}
  </select>
  
  <select id="getAllUserRoleByUserId" parameterType="java.lang.String" resultType="com.credit.entity.system.AuRole">
    SELECT
		role.*
	FROM
		au_user_role_rel rel
	LEFT JOIN au_role role on rel.ROLE_ID = role.ID
	where rel.USER_ID = #{userId,jdbcType=VARCHAR}
  </select>
  
  <insert id="insertUserMenuRel" parameterType="map" >
    insert into au_user_menu_rel (ID, USER_ID, MENU_ID, IS_VALID, 
      IS_DEL, CREATE_USER_ID, CREATE_USER_NAME, 
      CREATE_DATE)
    values (uuid(), #{userId,jdbcType=VARCHAR}, #{menuId,jdbcType=VARCHAR}, #{isValid,jdbcType=VARCHAR}, 
      #{isDel,jdbcType=VARCHAR}, #{createUserId,jdbcType=VARCHAR}, #{createUserName,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP})
  </insert>
  
  <insert id="insertUserRoleRel" parameterType="map" >
    insert into au_user_role_rel (ID, USER_ID, role_ID, IS_VALID, 
      IS_DEL, CREATE_USER_ID, CREATE_USER_NAME, 
      CREATE_DATE)
    values (uuid(), #{userId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{isValid,jdbcType=VARCHAR}, 
      #{isDel,jdbcType=VARCHAR}, #{createUserId,jdbcType=VARCHAR}, #{createUserName,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP})
  </insert>
  
  <delete id="deleteUserMenuRelByUserId" parameterType="java.lang.String">
  	delete from au_user_menu_rel where user_id = #{userId}
  </delete>
  
  <delete id="deleteUserRoleRelByUserId" parameterType="java.lang.String">
  	delete from au_user_role_rel where user_id = #{userId}
  </delete>
  
  <update id="delete" parameterType="java.util.ArrayList" >
    update au_user set is_del = '1'
    where ID in 
    <foreach collection="list" item="item" open="(" close=")" separator=",">
    	#{item}  
    </foreach>
  </update>
  
  <insert id="insert" parameterType="com.credit.entity.system.AuUser">
    insert into au_user (ID, username, passwd, 
      realname, email, login_ip, 
      login_time, IS_VALID, IS_DEL, 
      CREATE_USER_ID, CREATE_USER_NAME, CREATE_DATE, 
      LAST_UPDATE_USER_ID, LAST_UPDATE_USER_NAME, LAST_UPDATE_DATE
      )
    values (uuid(), #{username,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{loginIp,jdbcType=VARCHAR}, 
      #{loginTime,jdbcType=TIMESTAMP}, #{isValid,jdbcType=VARCHAR}, #{isDel,jdbcType=VARCHAR}, 
      #{createUserId,jdbcType=VARCHAR}, #{createUserName,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{lastUpdateUserId,jdbcType=VARCHAR}, #{lastUpdateUserName,jdbcType=VARCHAR}, #{lastUpdateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  
  <update id="update" parameterType="com.credit.entity.system.AuUser">
    update au_user
    set username = #{username,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      <if test = "passwd != null and passwd !=''">
		 passwd = #{passwd,jdbcType=VARCHAR},
	  </if>
      LAST_UPDATE_USER_ID = #{lastUpdateUserId,jdbcType=VARCHAR},
      LAST_UPDATE_USER_NAME = #{lastUpdateUserName,jdbcType=VARCHAR},
      LAST_UPDATE_DATE = #{lastUpdateDate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="updateIsValid" parameterType="map">
    update au_user
    set IS_VALID = #{isValid,jdbcType=VARCHAR},
		LAST_UPDATE_USER_ID = #{lastUpdateUserId,jdbcType=VARCHAR},
		LAST_UPDATE_USER_NAME = #{lastUpdateUserName,jdbcType=VARCHAR},
		LAST_UPDATE_DATE = #{lastUpdateDate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
</mapper>