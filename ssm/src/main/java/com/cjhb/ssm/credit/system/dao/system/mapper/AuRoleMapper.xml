<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.credit.dao.system.AuRoleMapper">
  <resultMap id="BaseResultMap" type="com.credit.entity.system.AuRole">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
    <result column="ROLE_CODE" jdbcType="VARCHAR" property="roleCode" />
    <result column="IS_VALID" jdbcType="VARCHAR" property="isValid" />
    <result column="IS_DEL" jdbcType="VARCHAR" property="isDel" />
    <result column="CREATE_USER_ID" jdbcType="VARCHAR" property="createUserId" />
    <result column="CREATE_USER_NAME" jdbcType="VARCHAR" property="createUserName" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="LAST_UPDATE_USER_ID" jdbcType="VARCHAR" property="lastUpdateUserId" />
    <result column="LAST_UPDATE_USER_NAME" jdbcType="VARCHAR" property="lastUpdateUserName" />
    <result column="LAST_UPDATE_DATE" jdbcType="TIMESTAMP" property="lastUpdateDate" />
  </resultMap>
  
  <resultMap id="MenuRoleRelMap" type="map">
    <result column="menu_path" jdbcType="VARCHAR" property="menuPath" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
  </resultMap>
  
  <sql id="Base_Column_List">
    ID, ROLE_NAME,ROLE_CODE, IS_VALID, IS_DEL, CREATE_USER_ID, CREATE_USER_NAME, CREATE_DATE, LAST_UPDATE_USER_ID, 
    LAST_UPDATE_USER_NAME, LAST_UPDATE_DATE
  </sql>
  
  <select id="getAllMenuRoleRel" parameterType="map" resultMap="MenuRoleRelMap">
  	SELECT
	menu.menu_path,
	role.role_code
	FROM
		au_role_menu_rel rel
	LEFT JOIN au_menu menu ON menu.id = rel.MENU_ID
	LEFT JOIN au_role role ON role.id = rel.ROLE_ID
	where rel.IS_DEL = '0'
	and role.IS_DEL = '0'
	and role.IS_VALID = '1'
	and menu.menu_path != ''
	order by menu.menu_path
  </select>
  
  <select id="getAllMenusByRoleId" parameterType="java.lang.String" resultType="com.credit.entity.system.AuMenu">
    select menu.* 
    from au_role_menu_rel rel left join au_menu menu on rel.MENU_ID = menu.ID
    where rel.role_id = #{roleId,jdbcType=VARCHAR}
  </select>
  
  <select id="get" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from au_role
    where ID = #{id}
  </select>
  
  <select id="getRoleList" parameterType="map" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from au_role
    where is_del = '0'
    <if test="roleName != null and roleName != ''">
       AND (
			role_Name LIKE CONCAT('%',#{roleName,jdbcType=VARCHAR},'%') 
			or role_Name LIKE CONCAT('%',#{roleName,jdbcType=VARCHAR},'%')
			)
    </if>
    <if test="isValid != null and isValid != ''">
       AND is_Valid = #{isValid,jdbcType=VARCHAR}
    </if>
    ORDER BY 
			IS_VALID DESC
  </select>
  
  <select id="ifExists" parameterType="map" resultType="role">
	<![CDATA[
	SELECT * FROM AU_ROLE T
		WHERE T.IS_DEL = '0' 
		AND t.ROLE_NAME = #{roleName,jdbcType=VARCHAR}
		AND T.ID != #{id,jdbcType=VARCHAR}
	]]>
  </select>
  
  <select id="ifExistsRoleCode" parameterType="map" resultType="role">
	<![CDATA[
	SELECT * FROM AU_ROLE T
		WHERE T.IS_DEL = '0' 
		AND t.ROLE_CODE = #{roleCode,jdbcType=VARCHAR}
		AND T.ID != #{id,jdbcType=VARCHAR}
	]]>
  </select>
  
  <update id="delete" parameterType="java.util.ArrayList" >
    update au_role set is_del = '1'
    where ID in 
    <foreach collection="list" item="item" open="(" close=")" separator=",">
    	#{item}  
    </foreach>
  </update>
  
  <insert id="insertRoleMenuRel" parameterType="map" >
    insert into au_role_menu_rel (ID, ROLE_ID, MENU_ID, IS_VALID, 
      IS_DEL, CREATE_USER_ID, CREATE_USER_NAME, 
      CREATE_DATE)
    values (uuid(), #{roleId,jdbcType=VARCHAR}, #{menuId,jdbcType=VARCHAR}, #{isValid,jdbcType=VARCHAR}, 
      #{isDel,jdbcType=VARCHAR}, #{createUserId,jdbcType=VARCHAR}, #{createUserName,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP})
  </insert>
  
  <delete id="deleteRoleMenuRelByRoleId" parameterType="java.lang.String">
  	delete from au_role_menu_rel where role_id = #{roleId}
  </delete>
  
  <insert id="insert" parameterType="com.credit.entity.system.AuRole">
    insert into au_role (ID, ROLE_NAME, ROLE_CODE,IS_VALID, 
      IS_DEL, CREATE_USER_ID, CREATE_USER_NAME, 
      CREATE_DATE)
    values (uuid(), #{roleName,jdbcType=VARCHAR},  #{roleCode,jdbcType=VARCHAR}, #{isValid,jdbcType=VARCHAR}, 
      #{isDel,jdbcType=VARCHAR}, #{createUserId,jdbcType=VARCHAR}, #{createUserName,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP})
  </insert>
  
  <update id="update" parameterType="com.credit.entity.system.AuRole">
    update au_role
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      ROLE_CODE = #{roleCode,jdbcType=VARCHAR},
      LAST_UPDATE_USER_ID = #{lastUpdateUserId,jdbcType=VARCHAR},
      LAST_UPDATE_USER_NAME = #{lastUpdateUserName,jdbcType=VARCHAR},
      LAST_UPDATE_DATE = #{lastUpdateDate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="updateIsValid" parameterType="map">
    update au_role
    set IS_VALID = #{isValid,jdbcType=VARCHAR},
		LAST_UPDATE_USER_ID = #{lastUpdateUserId,jdbcType=VARCHAR},
		LAST_UPDATE_USER_NAME = #{lastUpdateUserName,jdbcType=VARCHAR},
		LAST_UPDATE_DATE = #{lastUpdateDate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>