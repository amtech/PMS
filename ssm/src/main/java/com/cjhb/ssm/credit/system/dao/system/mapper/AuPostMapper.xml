<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.credit.dao.system.AuPostMapper">
  <resultMap id="BaseResultMap" type="com.credit.entity.system.AuPost">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="POST_CODE" jdbcType="VARCHAR" property="postCode" />
    <result column="POST_NAME" jdbcType="VARCHAR" property="postName" />
    <result column="SUPER_POST_ID" jdbcType="VARCHAR" property="superPostId" />
    <result column="POST_LEVEL" jdbcType="VARCHAR" property="postLevel" />
    <result column="HAS_CHILD" jdbcType="VARCHAR" property="hasChild" />
    <result column="IS_VALID" jdbcType="VARCHAR" property="isValid" />
    <result column="IS_DEL" jdbcType="VARCHAR" property="isDel" />
    <result column="CREATE_USER_ID" jdbcType="VARCHAR" property="createUserId" />
    <result column="CREATE_USER_NAME" jdbcType="VARCHAR" property="createUserName" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="LAST_UPDATE_USER_ID" jdbcType="VARCHAR" property="lastUpdateUserId" />
    <result column="LAST_UPDATE_USER_NAME" jdbcType="VARCHAR" property="lastUpdateUserName" />
    <result column="LAST_UPDATE_DATE" jdbcType="TIMESTAMP" property="lastUpdateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, POST_CODE, POST_NAME, SUPER_POST_ID, POST_LEVEL, HAS_CHILD, IS_VALID, IS_DEL, CREATE_USER_ID, CREATE_USER_NAME, 
    CREATE_DATE, LAST_UPDATE_USER_ID, LAST_UPDATE_USER_NAME, LAST_UPDATE_DATE
  </sql>
  
  <select id="getById" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from au_post
    where ID = #{postId,jdbcType=VARCHAR}
  </select>
  
  <select id="getChildrenById" parameterType="map" resultMap="BaseResultMap">
		SELECT * FROM AU_POST WHERE IS_DEL='0'
		<if test = "id!=null and id !=''">
		AND SUPER_POST_ID =#{id,jdbcType=VARCHAR}
		</if>
		<if test = "id==null or id ==''">
		AND (SUPER_POST_ID is null or SUPER_POST_ID='')
		</if>
		ORDER BY POST_CODE
	</select>
	
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from au_post
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  
  <select id="getAllPostList" parameterType="map" resultMap="BaseResultMap">
		SELECT 
		<include refid="Base_Column_List" />
		 FROM AU_POST 
		 WHERE IS_DEL='0'
		 ORDER BY HAS_CHILD DESC,POST_LEVEL,POST_CODE
	</select>
	
	<select id="ifExists" parameterType="map" resultType="post">
	SELECT * FROM AU_POST t
		WHERE t.POST_CODE = #{postCode,jdbcType=VARCHAR}
		AND t.IS_DEL=#{isDel}
		<if test = "id!=null and id!=''">
			AND t.ID!=#{id,jdbcType=VARCHAR}
		</if>
		
  </select>
  
  <update id="delete" parameterType="java.util.ArrayList" >
    update au_post set is_del = '1'
    where ID in 
    <foreach collection="list" item="item" open="(" close=")" separator=",">
    	#{item}  
    </foreach>
  </update>
  
  <insert id="insert" parameterType="com.credit.entity.system.AuPost">
    insert into au_post (ID, POST_NAME, POST_CODE, HAS_CHILD,POST_LEVEL,
      SUPER_POST_ID, IS_VALID, IS_DEL, 
      CREATE_USER_ID, CREATE_USER_NAME, CREATE_DATE, 
      LAST_UPDATE_USER_ID, LAST_UPDATE_USER_NAME, LAST_UPDATE_DATE
      )
    values (UUID(), #{postName,jdbcType=VARCHAR}, #{postCode,jdbcType=VARCHAR},  #{hasChild,jdbcType=VARCHAR},  #{postLevel,jdbcType=VARCHAR}, 
      #{superPostId,jdbcType=VARCHAR}, #{isValid,jdbcType=VARCHAR}, #{isDel,jdbcType=VARCHAR}, 
      #{createUserId,jdbcType=VARCHAR}, #{createUserName,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{lastUpdateUserId,jdbcType=VARCHAR}, #{lastUpdateUserName,jdbcType=VARCHAR}, #{lastUpdateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  
  <update id="update" parameterType="com.credit.entity.system.AuPost">
    update au_post
    set POST_CODE = #{postCode,jdbcType=VARCHAR},
      POST_NAME = #{postName,jdbcType=VARCHAR},
      SUPER_POST_ID = #{superPostId,jdbcType=VARCHAR},
      POST_LEVEL = #{postLevel,jdbcType=VARCHAR},
      HAS_CHILD = #{hasChild,jdbcType=VARCHAR},
      IS_VALID = #{isValid,jdbcType=VARCHAR},
      IS_DEL = #{isDel,jdbcType=VARCHAR},
      LAST_UPDATE_USER_ID = #{lastUpdateUserId,jdbcType=VARCHAR},
      LAST_UPDATE_USER_NAME = #{lastUpdateUserName,jdbcType=VARCHAR},
      LAST_UPDATE_DATE = #{lastUpdateDate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="updateHasChild" parameterType="map">
    update au_post
    set HAS_CHILD = #{hasChild,jdbcType=VARCHAR} 
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>